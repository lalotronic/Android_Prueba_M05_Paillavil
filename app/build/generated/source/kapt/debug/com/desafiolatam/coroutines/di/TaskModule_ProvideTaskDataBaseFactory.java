// Generated by Dagger (https://dagger.dev).
package com.desafiolatam.coroutines.di;

import android.content.Context;
import com.desafiolatam.coroutines.data.TaskDataBase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata("dagger.hilt.android.qualifiers.ApplicationContext")
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class TaskModule_ProvideTaskDataBaseFactory implements Factory<TaskDataBase> {
  private final Provider<Context> contextProvider;

  public TaskModule_ProvideTaskDataBaseFactory(Provider<Context> contextProvider) {
    this.contextProvider = contextProvider;
  }

  @Override
  public TaskDataBase get() {
    return provideTaskDataBase(contextProvider.get());
  }

  public static TaskModule_ProvideTaskDataBaseFactory create(Provider<Context> contextProvider) {
    return new TaskModule_ProvideTaskDataBaseFactory(contextProvider);
  }

  public static TaskDataBase provideTaskDataBase(Context context) {
    return Preconditions.checkNotNullFromProvides(TaskModule.INSTANCE.provideTaskDataBase(context));
  }
}
