// Generated by Dagger (https://dagger.dev).
package com.desafiolatam.coroutines.di;

import com.desafiolatam.coroutines.data.TaskDao;
import com.desafiolatam.coroutines.data.TaskDataBase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class TaskModule_ProvideTaskDaoFactory implements Factory<TaskDao> {
  private final Provider<TaskDataBase> dbProvider;

  public TaskModule_ProvideTaskDaoFactory(Provider<TaskDataBase> dbProvider) {
    this.dbProvider = dbProvider;
  }

  @Override
  public TaskDao get() {
    return provideTaskDao(dbProvider.get());
  }

  public static TaskModule_ProvideTaskDaoFactory create(Provider<TaskDataBase> dbProvider) {
    return new TaskModule_ProvideTaskDaoFactory(dbProvider);
  }

  public static TaskDao provideTaskDao(TaskDataBase db) {
    return Preconditions.checkNotNullFromProvides(TaskModule.INSTANCE.provideTaskDao(db));
  }
}
